# Generated by Django 5.0.3 on 2024-04-06 05:38

import django.core.validators
import users.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('username', models.CharField(error_messages={'unique': 'Пользователь с таким именем уже зарегистрирован'}, max_length=16, unique=True, validators=[django.core.validators.MinLengthValidator(4), users.validators.UsernameValidator()], verbose_name='Имя пользователя')),
                ('email', models.EmailField(error_messages={'unique': 'Пользователь с такой почтой уже зарегистрирован'}, max_length=254, unique=True, verbose_name='Электронная почта')),
                ('is_staff', models.BooleanField(default=False, help_text='Определяет, является ли данный пользователь членом персонала', verbose_name='Статус персонала')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный пользователь')),
                ('is_superuser', models.BooleanField(default=False, help_text='Определяет, является ли данный пользователь суперпользователем.', verbose_name='Статус суперпользователя')),
                ('registered', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='Последний вход')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
    ]
